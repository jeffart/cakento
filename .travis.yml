language: php

php:
  - 5.3

env:
  - DB=mysql

before_script:
  - mysql -e 'CREATE DATABASE cakephp_test;'
  - mkdir -p ./app/tmp
  - mkdir -p ./app/tmp/cache/{models, persistent, views}
  - mkdir -p ./app/tmp/{logs, sessions, tests}
  - chmod -R 777 ./app/tmp/
  - echo "var net = require('net');
    var server = net.createServer();
    server.listen(80, 'localhost');
    console.log('TCP server listening on port 80 at localhost.');" > app/tmp/socket.js
  - sudo node ./app/tmp/socket.js &
  - set +H
  - echo "<?php
    class DATABASE_CONFIG {
    private \$identities = array(
      'mysql' => array(
        'datasource' => 'Database/Mysql',
        'host' => '0.0.0.0',
        'login' => 'travis'
      )
    );
    public \$default = array(
      'persistent' => false,
      'host' => '',
      'login' => '',
      'password' => '',
      'database' => 'cakento',
      'prefix' => '',
      'encoding' => 'utf8'
    );
    public \$test1 = array(
      'persistent' => false,
      'host' => '',
      'login' => '',
      'password' => '',
      'database' => 'cakento_test_1',
      'prefix' => '',
      'encoding' => 'utf8'
    );
    public \$test2 = array(
      'persistent' => false,
      'host' => '',
      'login' => '',
      'password' => '',
      'database' => 'cakento_test_2',
      'prefix' => '',
      'encoding' => 'utf8'
    );
    public function __construct() {
      \$db = 'mysql';
      if (!empty(\$_SERVER['DB'])) {
        \$db = \$_SERVER['DB'];
      }
      foreach (array('default', 'test1', 'test2') as \$source) {
        \$config = array_merge(\$this->{\$source}, \$this->identities[\$db]);
        if (is_array(\$config['database'])) {
          \$config['database'] = \$config['database'][\$source];
        }
        if (!empty(\$config['schema']) && is_array(\$config['schema'])) {
          \$config['schema'] = \$config['schema'][\$source];
        }
        \$this->{\$source} = \$config;
      }
    }
    }" > app/Config/database.php

script:
  - ./lib/Cake/Console/cake test core AllTests --stderr

notifications:
  email: false